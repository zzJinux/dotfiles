#!/usr/bin/env bash

append_path() {
  PATH=${PATH:+$PATH:}$1
}

prepend_path() {
  PATH=$1${PATH:+:$PATH}
}

declare -xgr LOGIN_SHELL_SESSION_ID=$SHELL_SESSION_ID

# Language
export LANG='en_US.UTF-8'
#export LC_ALL=$LANG
#export LC_COLLATE=$LANG
#export LC_CTYPE=$LANG
#export LC_MESSAGES=$LANG
#export LC_MONETARY=$LANG
#export LC_NUMERIC=$LANG
#export LC_TIME=$LANG

export BLOCKSIZE=1k # Default blocksize for ls, df, du

# Homebrew
source "$DOTFILES/homebrew/login"

export PATH
prepend_path "$HOME/bin"
prepend_path "$HOME/.local/bin"
# `go install` executables
prepend_path "$HOME/go/bin"
# Ruby executables
prepend_path "$HOMEBREW_PREFIX/opt/ruby/bin"

test -x /usr/libexec/java_home && { JAVA_HOME="$(/usr/libexec/java_home)" && export JAVA_HOME; }

# Rust
test -r "$HOME/.cargo/env" && source "$HOME/.cargo/env"

# fzf
append_path "$HOMEBREW_PREFIX/opt/fzf/bin"

# Default programs
export EDITOR
if command -v nvim >/dev/null; then
  EDITOR=$(command -v nvim)
elif command -v vim >/dev/null; then
  EDITOR=$(command -v vim)
else
  EDITOR=$(command -v vi)
fi

# python (Xcode Command Line Tools)
# PATH="$(python3 -c 'import os,sysconfig;print(sysconfig.get_path("scripts",f"{os.name}_user"))'):$PATH"

test -r "$DOTFILES/bash/login__local" && source "$DOTFILES/bash/login__local"

path_sanity_report() {
  local IFS=:
  local e
  for e in $PATH; do
    case $e in 
      /*) : ;;
      *) 2>&1 echo 'WARNING: $PATH contains a relative path: '"$e" ;;
    esac
  done
}
path_sanity_report