#!/usr/bin/env bash

declare -xgr LOGIN_SHELL_SESSION_ID=$SHELL_SESSION_ID

# Language
export LANG='en_US.UTF-8'
#export LC_ALL=$LANG
#export LC_COLLATE=$LANG
#export LC_CTYPE=$LANG
#export LC_MESSAGES=$LANG
#export LC_MONETARY=$LANG
#export LC_NUMERIC=$LANG
#export LC_TIME=$LANG

export BLOCKSIZE=1k # Default blocksize for ls, df, du

# Homebrew
source "$DOTFILES/homebrew/login__local"

path_prepends=(
  "$HOME/bin"
  "$HOME/.local/bin"
  # https://github.com/Homebrew/brew/blob/master/Library/Homebrew/cmd/shellenv.sh
  "$HOMEBREW_PREFIX/bin" "$HOMEBREW_PREFIX/sbin"
)

path_appends=(
  "$HOME/go/bin"
  "$HOME/.cargo/bin"
  "$HOMEBREW_PREFIX/opt/ruby/bin"
  "$HOMEBREW_PREFIX/opt/fzf/bin"
)

test -r "$DOTFILES/bash/login__local" && source "$DOTFILES/bash/login__local"

# python (Xcode Command Line Tools)
# PATH="$(python3 -c 'import os,sysconfig;print(sysconfig.get_path("scripts",f"{os.name}_user"))'):$PATH"

_df_path() {
  local IFS=:
  local path=( $PATH )
  local dedup_path=()
  local e

  for e in "${path[@]}"; do
    if [[ ! " ${path_prepends[*]} " =~ " $e " ]]; then
      dedup_path+=( "$e" )
    fi
    if [[ ! " ${path_appends[*]} " =~ " $e " ]]; then
      dedup_path+=( "$e" )
    fi
  done
  path=( "${path_prepends[@]}" "${dedup_path[@]}" "${path_appends[@]}" )

  for e in "${path[@]}"; do
    case $e in 
      /*) : ;;
      *) 2>&1 echo 'WARNING: $PATH contains a relative path: '"$e" ;;
    esac
  done
  export PATH="${path[*]}"
} && _df_path; unset -f _df_path
unset -v path_prepends path_appends

if [[ ! $INFOPATH ==  *"$HOMEBREW_PREFIX"/share/info* ]]; then
  export INFOPATH="$HOMEBREW_PREFIX/share/info:${INFOPATH:-}"
fi

# Default programs
export EDITOR
if command -v nvim >/dev/null; then
  EDITOR=$(command -v nvim)
elif command -v vim >/dev/null; then
  EDITOR=$(command -v vim)
else
  EDITOR=$(command -v vi)
fi

test -x /usr/libexec/java_home && { JAVA_HOME="$(/usr/libexec/java_home)" && export JAVA_HOME; }