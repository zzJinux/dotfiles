(( ${+commands[direnv]} )) && emulate zsh -c "$(direnv export zsh)"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# zimfw/completion calls compinit
# autoload -Uz compinit && compinit
autoload -Uz bashcompinit && bashcompinit

li=(
  docker
  kubernetes
  terraform
  openstack
  aws
  macos
  git
  fzf
  fnm
  python
  local
)
for b in "${li[@]}"; do
  source "$DOTFILES/$b/shcmd"
done; unset li

source "$DOTFILES/terminal/iterm2/shell_integration.zsh"

fpath=(~/.local/share/zsh/completions $fpath)

# Set editor default keymap to vi
# If you use zsh-vi-mode, this is must.
bindkey -v

# Key bindings (zsh-vi-mode hooks) {{{
zvm_before_init() {
  zvm_bindkey viins '^ ' autosuggest-accept
}

zvm_after_init() {
  zvm_bindkey viins '^R' fzf-history-widget
}
# }}}

ZSH_BASH_COMPLETIONS_FALLBACK_LOAD_NATIVE_COMPLETIONS=false
ZSH_BASH_COMPLETIONS_FALLBACK_REPLACE_ALL=true

# Start configuration added by Zim install {{{
#
# User configuration sourced by interactive shells
#

# -----------------
# Zsh configuration
# -----------------

#
# History
#

# Remove older command from the history if a duplicate is to be added.
setopt HIST_IGNORE_ALL_DUPS

#
# Input/output
#

# Prompt for spelling correction of commands.
#setopt CORRECT

# Customize spelling correction prompt.
#SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

# Remove path separator from WORDCHARS.
WORDCHARS=${WORDCHARS//[\/]}

# -----------------
# Zim configuration
# -----------------

# Use degit instead of git as the default tool to install and update modules.
#zstyle ':zim:zmodule' use 'degit'

# --------------------
# Module configuration
# --------------------

#
# git
#

# Set a custom prefix for the generated aliases. The default prefix is 'G'.
#zstyle ':zim:git' aliases-prefix 'g'

#
# input
#

# Append `../` to your input for each `.` you type after an initial `..`
#zstyle ':zim:input' double-dot-expand yes

#
# termtitle
#

# Set a custom terminal title format using prompt expansion escape sequences.
# See http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Simple-Prompt-Escapes
# If none is provided, the default '%n@%m: %~' is used.
#zstyle ':zim:termtitle' format '%1~'

#
# zsh-autosuggestions
#

# Disable automatic widget re-binding on each precmd. This can be set when
# zsh-users/zsh-autosuggestions is the last module in your ~/.zimrc.
ZSH_AUTOSUGGEST_MANUAL_REBIND=1

# Customize the style that the suggestions are shown with.
# See https://github.com/zsh-users/zsh-autosuggestions/blob/master/README.md#suggestion-highlight-style
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=242'

#
# zsh-syntax-highlighting
#

# Set what highlighters will be used.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Customize the main highlighter styles.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/main.md#how-to-tweak-it
#typeset -A ZSH_HIGHLIGHT_STYLES
#ZSH_HIGHLIGHT_STYLES[comment]='fg=242'

# ------------------
# Initialize modules
# ------------------

ZIM_HOME=${ZDOTDIR:-${HOME}}/.zim
# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  if (( ${+commands[curl]} )); then
    curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  else
    mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  fi
fi
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
# Initialize modules.
source ${ZIM_HOME}/init.zsh

# ------------------------------
# Post-init module configuration
# ------------------------------

#
# zsh-history-substring-search
#

zmodload -F zsh/terminfo +p:terminfo
# Bind ^[[A/^[[B manually so up/down works both before and after zle-line-init
for key ('^[[A' '^P' ${terminfo[kcuu1]}) bindkey ${key} history-substring-search-up
for key ('^[[B' '^N' ${terminfo[kcud1]}) bindkey ${key} history-substring-search-down
for key ('k') bindkey -M vicmd ${key} history-substring-search-up
for key ('j') bindkey -M vicmd ${key} history-substring-search-down
unset key
# }}} End configuration added by Zim install

# https://github.com/Aloxaf/fzf-tab/issues/24#issuecomment-574986122
zstyle -d ':completion:*' format
zstyle ':completion:*:descriptions' format '[%d]'

# Powerlevel10k {{{
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# }}}

# zsh-vi-mode {{{
ZVM_TERM=xterm-256color
# }}}

# fzf-tab {{{
zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
# }}}

setopt AUTO_CD
setopt AUTO_PUSHD
unsetopt CD_SILENT
unsetopt PUSHD_IGNORE_DUPS
unsetopt PUSHD_SILENT
unsetopt PUSHD_TO_HOME

unsetopt EXTENDED_GLOB

unsetopt INTERACTIVE_COMMENTS
setopt NO_CLOBBER
# HIST_ALLOW_CLOBBER

unsetopt BG_NICE
setopt CHECK_JOBS
setopt HUP
setopt LONG_LIST_JOBS  # List jobs in verbose forma

typeset -g HISTFILE=${ZDOTDIR:-${HOME}}/.zhistory
SAVEHIST=19999
HISTSIZE=19999                  # set HISTSIZE > SAVEHIST
setopt APPEND_HISTORY           # append rather than overwrite
unsetopt INC_APPEND_HISTORY
setopt INC_APPEND_HISTORY_TIME
unsetopt SHARE_HISTORY
setopt EXTENDED_HISTORY         # include timestamp
setopt HIST_BEEP                # beep if attempting to access a history entry which isnâ€™t there
setopt HIST_EXPIRE_DUPS_FIRST   # trim dupes first if history is full
setopt HIST_FIND_NO_DUPS        # do not display previously found command
unsetopt HIST_IGNORE_ALL_DUPS   # do not remove old duplicates when a new one is added
setopt HIST_IGNORE_DUPS         # do not save duplicate of prior command
unsetopt HIST_SAVE_NO_DUPS
setopt HIST_IGNORE_SPACE        # do not save if line starts with space
unsetopt HIST_LEX_WORDS
setopt HIST_NO_STORE            # do not save history commands
setopt HIST_REDUCE_BLANKS       # strip superfluous blanks
setopt HIST_VERIFY              # expand command line without executing it

# TODO: expand-word in vi mode
# https://zsh.sourceforge.io/Doc/Release/Zsh-Line-Editor.html#index-expand_002dword

unalias run-help
autoload -U run-help
alias help=run-help

source "$DOTFILES/zoxide/shcmd"
source "$DOTFILES/shell/interactive"

[ -f "$DOTFILES/zsh/__local/completion.zsh" ] && source "$DOTFILES/zsh/__local/completion.zsh"

(( ${+commands[direnv]} )) && emulate zsh -c "$(direnv hook zsh)"
